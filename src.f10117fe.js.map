{"version":3,"sources":["../../src/Errors.ts","../../src/HttpClient.ts","../../src/ILogger.ts","../../src/Loggers.ts","../../src/Utils.ts","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","../../src/NodeHttpClient.ts","../../src/XhrHttpClient.ts","../../src/DefaultHttpClient.ts","../../src/TextMessageFormat.ts","../../src/HandshakeProtocol.ts","../../src/IHubProtocol.ts","../../src/HubConnection.ts","../../src/ITransport.ts","../../src/AbortController.ts","../../src/LongPollingTransport.ts","../../src/ServerSentEventsTransport.ts","../../src/WebSocketTransport.ts","../../src/HttpConnection.ts","../../src/JsonHubProtocol.ts","../../src/HubConnectionBuilder.ts","../../src/index.ts","src/networking.ts","src/index.ts","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: { [key: string]: string };\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @aspnet/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @aspnet/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @aspnet/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n        // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n        (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined, content: string | ArrayBuffer, logMessageContent: boolean): Promise<void> {\r\n    let headers;\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers,\r\n        responseType,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    console.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    console.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    console.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    console.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as Request from \"@types/request\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\nlet requestModule: Request.RequestAPI<Request.Request, Request.CoreOptions, Request.RequiredUriUrl>;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\n\r\nexport class NodeHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n    private readonly request: typeof requestModule;\r\n    private readonly cookieJar: Request.CookieJar;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n\r\n        this.logger = logger;\r\n        this.cookieJar = requestModule.jar();\r\n        this.request = requestModule.defaults({ jar: this.cookieJar });\r\n    }\r\n\r\n    public send(httpRequest: HttpRequest): Promise<HttpResponse> {\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n\r\n            let requestBody: Buffer | string;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            } else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n\r\n            const currentRequest = this.request(httpRequest.url!, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: {\r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...httpRequest.headers,\r\n                },\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            },\r\n            (error, response, body) => {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    this.logger.log(LogLevel.Warning, `Error from HTTP request. ${error}`);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                } else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = () => {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.cookieJar.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @aspnet/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @aspnet/signalr.DefaultHttpClient}, using the provided {@link @aspnet/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @aspnet/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @aspnet/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @aspnet/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @aspnet/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @aspnet/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @aspnet/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @aspnet/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @aspnet/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @aspnet/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @aspnet/signalr.StreamInvocationMessage} and {@link @aspnet/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @aspnet/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @aspnet/signalr.CompletionMessage.error} or {@link @aspnet/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @aspnet/signalr.CompletionMessage.error} or {@link @aspnet/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @aspnet/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @aspnet/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @aspnet/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @aspnet/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Arg, Subject } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected,\r\n    /** The hub connection is connected. */\r\n    Connected,\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private id: number;\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private connectionState: HubConnectionState;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol): HubConnection {\r\n        return new HubConnection(connection, logger, protocol);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.id = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public async start(): Promise<void> {\r\n        const handshakeRequest: HandshakeRequestMessage = {\r\n            protocol: this.protocol.name,\r\n            version: this.protocol.version,\r\n        };\r\n\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n        await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n        this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n        // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n        this.cleanupTimeout();\r\n        this.resetTimeoutPeriod();\r\n        this.resetKeepAliveInterval();\r\n\r\n        // Wait for the handshake to complete before marking connection as connected\r\n        await handshakePromise;\r\n        this.connectionState = HubConnectionState.Connected;\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        return this.connection.stop();\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n            const cancelMessage: any = this.protocol.writeMessage(cancelInvocation);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendMessage(cancelMessage);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        const message = this.protocol.writeMessage(invocationDescriptor);\r\n\r\n        promiseQueue = this.sendMessage(message)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const invocationDescriptor = this.createInvocation(methodName, args, true);\r\n\r\n        const message = this.protocol.writeMessage(invocationDescriptor);\r\n\r\n        return this.sendMessage(message);\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const message = this.protocol.writeMessage(invocationDescriptor);\r\n\r\n            this.sendMessage(message)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @aspnet/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @aspnet/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback != null) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        // We don't want to wait on the stop itself.\r\n                        // tslint:disable-next-line:no-floating-promises\r\n                        this.connection.stop(message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined);\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(error);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            this.handshakeRejecter(message);\r\n            // We don't want to wait on the stop itself.\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.connection.stop(new Error(message));\r\n            throw new Error(message);\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(async () => {\r\n            if (this.connectionState === HubConnectionState.Connected) {\r\n                try {\r\n                    await this.sendMessage(this.cachedPingMessage);\r\n                } catch {\r\n                    // We don't care about the error. It should be seen elsewhere in the client.\r\n                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                    this.cleanupPingTimer();\r\n                }\r\n            }\r\n        }, this.keepAliveIntervalInMilliseconds);\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't need to wait on this Promise.\r\n                // tslint:disable-next-line:no-floating-promises\r\n                this.connection.stop(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n\r\n        // if handshake is in progress start will be waiting for the handshake promise, so we complete it\r\n        // if it has already completed this should just noop\r\n        if (this.handshakeRejecter) {\r\n            this.handshakeRejecter(error);\r\n        }\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error ? error : new Error(\"Invocation canceled due to connection being closed.\"));\r\n            });\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean): InvocationMessage {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            const id = this.id;\r\n            this.id++;\r\n\r\n            return {\r\n                arguments: args,\r\n                invocationId: id.toString(),\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[]): StreamInvocationMessage {\r\n        const id = this.id;\r\n        this.id++;\r\n\r\n        return {\r\n            arguments: args,\r\n            invocationId: id.toString(),\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly pollAbort: AbortController;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers: {},\r\n            timeout: 100000,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: {},\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (typeof window !== \"undefined\") {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n\r\n            if (typeof window === \"undefined\" && cookies) {\r\n                // Only pass cookies when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: {\r\n                        Cookie: `${cookies}`,\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    this.onreceive(message.data);\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => this.close(event);\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting,\r\n    Connected,\r\n    Disconnected,\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\nlet WebSocketModule: any = null;\r\nlet EventSourceModule: any = null;\r\nif (typeof window === \"undefined\" && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    private baseUrl: string;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startPromise?: Promise<void>;\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n\r\n    public readonly features: any = {};\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n\r\n        const isNode = typeof window === \"undefined\";\r\n        if (!isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a connection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startPromise = this.startInternal(transferFormat);\r\n        return this.startPromise;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            throw new Error(\"Cannot send data if the connection is not in the 'Connected' State.\");\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.transport!.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startPromise;\r\n        } catch (e) {\r\n            // this exception is returned to the user as a rejected Promise from the start method\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        if (this.transport) {\r\n            await this.transport.stop();\r\n            this.transport = undefined;\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.transport!.connect(url, transferFormat);\r\n                } else {\r\n                    throw Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnected) {\r\n                        return;\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            this.transport!.onreceive = this.onreceive;\r\n            this.transport!.onclose = (e) => this.stopConnection(e);\r\n\r\n            // only change the state if we were connecting to not overwrite\r\n            // the state if the connection is already marked as Disconnected\r\n            this.changeState(ConnectionState.Connecting, ConnectionState.Connected);\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        let headers;\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers = {\r\n                    [\"Authorization\"]: `Bearer ${token}`,\r\n                };\r\n            }\r\n        }\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                throw Error(`Unexpected status code returned from negotiate ${response.statusCode}`);\r\n            }\r\n\r\n            return JSON.parse(response.content as string) as INegotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionId: string | null | undefined) {\r\n        if (!connectionId) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionId}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.transport.connect(connectUrl, requestedTransferFormat);\r\n\r\n            // only change the state if we were connecting to not overwrite\r\n            // the state if the connection is already marked as Disconnected\r\n            this.changeState(ConnectionState.Connecting, ConnectionState.Connected);\r\n            return;\r\n        }\r\n\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        for (const endpoint of transports) {\r\n            this.connectionState = ConnectionState.Connecting;\r\n            const transport = this.resolveTransport(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (typeof transport === \"number\") {\r\n                this.transport = this.constructTransport(transport);\r\n                if (!negotiateResponse.connectionId) {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    connectUrl = this.createConnectUrl(url, negotiateResponse.connectionId);\r\n                }\r\n                try {\r\n                    await this.transport!.connect(connectUrl, requestedTransferFormat);\r\n                    this.changeState(ConnectionState.Connecting, ConnectionState.Connected);\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${HttpTransportType[transport]}': ${ex}`);\r\n                    this.connectionState = ConnectionState.Disconnected;\r\n                    negotiateResponse.connectionId = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new Error(\"Unable to initialize any of the available transports.\");\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private resolveTransport(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): HttpTransportType | null {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        return transport;\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private changeState(from: ConnectionState, to: ConnectionState): boolean {\r\n        if (this.connectionState === from) {\r\n            this.connectionState = to;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.onclose) {\r\n            this.onclose(error);\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (typeof window === \"undefined\" || !window || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative  path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @aspnet/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @aspnet/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n/** A builder for configuring {@link @aspnet/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** Configures console logging for the {@link @aspnet/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @aspnet/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @aspnet/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n    /** Configures custom logging for the {@link @aspnet/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | ILogger} logging An object implementing the {@link @aspnet/signalr.ILogger} interface or {@link @aspnet/signalr.LogLevel}.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @aspnet/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = transportTypeOrOptions;\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @aspnet/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @aspnet/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @aspnet/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @aspnet/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol());\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage, PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\n","import * as SignalR from \"@aspnet/signalr\";\nimport { RoomResponse } from \"../server/src/types\";\n\nexport interface NetworkingDelegate {\n  updatedRoom: (name: string, description: string) => void;\n  updatedPresenceInfo: (users: string[]) => void;\n  playerConnected: (name: string) => void;\n  playerDisconnected: (name: string) => void;\n  chatMessageReceived: (name: string, message: string) => void;\n  playerEntered: (name: string, from: string) => void;\n  playerLeft: (name: string, to: string) => void;\n}\n\nlet myUserId: string;\nlet myDelegate: NetworkingDelegate;\n\nexport async function connect(userId: string, delegate: NetworkingDelegate) {\n  myUserId = userId;\n  myDelegate = delegate;\n\n  const result: RoomResponse = await callAzureFunction(\"connect\");\n\n  console.log(result);\n  delegate.updatedRoom(result.room.displayName, result.room.description);\n  delegate.updatedPresenceInfo(result.roomOccupants);\n\n  connectSignalR(userId, delegate);\n}\n\nexport async function moveToRoom(roomId: string) {\n  // TODO: Show some progress updates here\n\n  const result: RoomResponse = await callAzureFunction(\"moveRoom\", {\n    to: roomId,\n  });\n\n  console.log(result);\n  myDelegate.updatedRoom(result.room.displayName, result.room.description);\n  myDelegate.updatedPresenceInfo(result.roomOccupants);\n}\n\nexport function sendChatMessage(text: string) {\n  callAzureFunction(\"sendChatMessage\", { text });\n}\n\nasync function connectSignalR(userId: string, delegate: NetworkingDelegate) {\n  class CustomHttpClient extends SignalR.DefaultHttpClient {\n    public send(request: SignalR.HttpRequest): Promise<SignalR.HttpResponse> {\n      request.headers = {\n        ...request.headers,\n        \"x-ms-client-principal-id\": userId,\n      };\n      return super.send(request);\n    }\n  }\n\n  const connection = new SignalR.HubConnectionBuilder()\n    .withUrl(`https://mud.azurewebsites.net/api`, {\n      httpClient: new CustomHttpClient(console),\n    })\n    .configureLogging(SignalR.LogLevel.Information)\n    .build();\n\n  connection.on(\"playerConnected\", (otherId) => {\n    console.log(\"Player joined!\", otherId);\n    delegate.playerConnected(otherId);\n  });\n\n  connection.on(\"playerDisconnected\", (otherId) => {\n    console.log(\"Player left!\", otherId);\n    delegate.playerDisconnected(otherId);\n  });\n\n  connection.on(\"chatMessage\", (otherId, message) => {\n    console.log(otherId, message);\n    if (otherId === userId) return;\n    delegate.chatMessageReceived(otherId, message);\n  });\n\n  connection.on(\"playerEntered\", (otherId, from) => {\n    if (otherId === userId) return;\n    delegate.playerEntered(otherId, from);\n  });\n\n  connection.on(\"playerLeft\", (otherId, to) => {\n    if (otherId === userId) return;\n    delegate.playerLeft(otherId, to);\n  });\n\n  connection.onclose(() => {\n    console.log(\"disconnected\");\n    callAzureFunction(\"disconnect\");\n  });\n\n  window.addEventListener(\"beforeunload\", (e) => {\n    callAzureFunction(\"disconnect\");\n  });\n\n  console.log(\"connecting...\");\n  return await connection\n    .start()\n    .then(() => console.log(\"Connected!\"))\n    .catch(console.error);\n}\n\nasync function callAzureFunction(\n  endpoint: string,\n  body?: any,\n  options?: Partial<RequestInit>\n): Promise<any> {\n  let opts = {\n    method: \"POST\",\n    credentials: \"include\" as RequestCredentials, // sigh\n    ...options,\n  };\n\n  opts.body = JSON.stringify({ ...(body || {}), userId: myUserId });\n\n  return fetch(`https://mud.azurewebsites.net/api/${endpoint}`, opts).then(\n    (r) => {\n      if (r.ok) {\n        console.log(\"Updated\", r);\n      } else {\n        console.error(\"Update failed\", r);\n      }\n\n      return r.json();\n    }\n  );\n}\n","import {\n  connect,\n  NetworkingDelegate,\n  sendChatMessage,\n  moveToRoom,\n} from \"./networking\";\n\nlet currentOtherPlayers: string[] = [];\n\nfunction renderPresence(users: string[]) {\n  console.log(\"Rendering presence\", users);\n  users = users.filter((u) => u !== localStorage.getItem(\"name\"));\n  let names = \"\";\n\n  if (users.length === 0) {\n    document.getElementById(\"dynamic-room-description\").innerText =\n      \"You are all alone here.\";\n    return;\n  }\n\n  if (users.length === 1) {\n    names = users[0];\n  } else if (users.length === 2) {\n    names = `${users[0]} and ${users[1]}`;\n  } else {\n    names = `${users.slice(0, users.length - 1).join(\", \")}, and ${\n      users[users.length - 1]\n    }`;\n  }\n  document.getElementById(\"dynamic-room-description\").innerHTML = `Also here ${\n    users.length === 1 ? \"is\" : \"are\"\n  } ${names}`;\n}\n\nconst delegate: NetworkingDelegate = {\n  updatedRoom: (name: string, description: string) => {\n    const complexLinkRegex = /\\[\\[([^\\]]*?)\\-\\>([^\\]]*?)\\]\\]/g;\n    const simpleLinkRegex = /\\[\\[(.+?)\\]\\]/g;\n\n    console.log(\"Updating room\", name, description);\n    description = description.replace(\n      complexLinkRegex,\n      (match, text, roomId) => {\n        console.log(\"Replacing complex\", match, text, roomId);\n        return `<a class='room-link' href='#' data-room='${roomId}'>${text}</a>`;\n      }\n    );\n\n    description = description.replace(simpleLinkRegex, (match, roomId) => {\n      console.log(\"Replacing simple\", match, roomId);\n      return `<a class='room-link' href='#' data-room='${roomId}'>${roomId}</a>`;\n    });\n\n    document.getElementById(\"room-name\").innerText = name;\n    document.getElementById(\"static-room-description\").innerHTML = description;\n\n    document\n      .querySelectorAll(\"#static-room-description .room-link\")\n      .forEach((el) =>\n        el.addEventListener(\"click\", (e) => {\n          const roomId = el.getAttribute(\"data-room\");\n          moveToRoom(roomId);\n        })\n      );\n  },\n\n  updatedPresenceInfo: (users: string[]) => {\n    currentOtherPlayers = users;\n    renderPresence(users);\n  },\n\n  playerConnected: (name: string) => {\n    console.log(\"In playerJoined\", name);\n    if (currentOtherPlayers.indexOf(name) === -1) {\n      currentOtherPlayers.push(name);\n      displayChatMessage(`<strong>${name}</strong> has joined.`);\n    }\n\n    renderPresence(currentOtherPlayers);\n  },\n\n  playerDisconnected: (name: string) => {\n    displayChatMessage(`<strong>${name}</strong> has left.`);\n    currentOtherPlayers = currentOtherPlayers.filter((p) => p !== name);\n    renderPresence(currentOtherPlayers);\n  },\n\n  playerEntered: (name: string, from: string) => {\n    console.log(\"In playerJoined\", name);\n    if (currentOtherPlayers.indexOf(name) === -1) {\n      currentOtherPlayers.push(name);\n      displayChatMessage(`<strong>${name}</strong> walks in from ${from}.`);\n    }\n\n    renderPresence(currentOtherPlayers);\n  },\n\n  playerLeft: (name: string, to: string) => {\n    displayChatMessage(`<strong>${name}</strong> wanders to ${to}.`);\n    currentOtherPlayers = currentOtherPlayers.filter((p) => p !== name);\n    renderPresence(currentOtherPlayers);\n  },\n\n  chatMessageReceived: (name: string, message: string) => {\n    displayChatMessage(message, name);\n  },\n};\n\nconst sendMessage = () => {\n  const input: HTMLInputElement = document.querySelector(\"#chat-input\");\n  const text = input.value;\n\n  if (text === \"\" || text === undefined) return;\n\n  sendChatMessage(text);\n  delegate.chatMessageReceived(localStorage.getItem(\"name\"), text);\n\n  input.value = \"\";\n};\n\nconst displayChatMessage = (msg: string, name?: string) => {\n  const el = document.createElement(\"div\");\n\n  if (name) {\n    el.innerHTML = `<strong>${name}:</strong> ${msg}`;\n  } else {\n    el.innerHTML = msg;\n  }\n\n  document.getElementById(\"messages\").append(el);\n  el.scrollIntoView();\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  let name = localStorage.getItem(\"name\");\n  if (!name) {\n    name = prompt(\"What is your user ID?\");\n    localStorage.setItem(\"name\", name);\n  }\n  connect(name, delegate);\n\n  document.getElementById(\"send\").addEventListener(\"click\", sendMessage);\n  document.addEventListener(\"keypress\", (e) => {\n    if (e.code === \"Enter\") {\n      sendMessage();\n    }\n  });\n});\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}